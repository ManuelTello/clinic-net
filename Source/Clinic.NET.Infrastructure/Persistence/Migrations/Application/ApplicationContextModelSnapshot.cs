// <auto-generated />
using System;
using Clinic.NET.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clinic.NET.Infrastructure.Persistence.Migrations.Application
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clinic.NET.Domain.AggregateRoots.Patient.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("nvarchar")
                        .HasColumnName("insurance_type");

                    b.HasKey("Id");

                    b.ToTable("Patients", (string)null);
                });

            modelBuilder.Entity("Clinic.NET.Domain.AggregateRoots.Patient.Patient", b =>
                {
                    b.OwnsOne("Clinic.NET.Domain.ObjectValues.Email", "Email", b1 =>
                        {
                            b1.Property<string>("PatientId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<string>("ValueEmail")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar")
                                .HasColumnName("email");

                            b1.HasKey("PatientId");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.OwnsOne("Clinic.NET.Domain.ObjectValues.FullName", "FullName", b1 =>
                        {
                            b1.Property<string>("PatientId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar")
                                .HasColumnName("full_name");

                            b1.HasKey("PatientId");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.OwnsOne("Clinic.NET.Domain.ObjectValues.Identification", "Identification", b1 =>
                        {
                            b1.Property<string>("PatientId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<int>("ValueIdentification")
                                .HasColumnType("int")
                                .HasColumnName("identification");

                            b1.HasKey("PatientId");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.OwnsOne("Clinic.NET.Domain.ObjectValues.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<string>("PatientId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<int>("ValuePhoneNumber")
                                .HasColumnType("int")
                                .HasColumnName("phone_number");

                            b1.HasKey("PatientId");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("FullName")
                        .IsRequired();

                    b.Navigation("Identification")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
